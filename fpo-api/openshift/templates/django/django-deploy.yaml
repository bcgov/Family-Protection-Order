---
kind: Template
apiVersion: v1
metadata:
  name: "${NAME}-deployment-template"
  annotations:
    description:
      Deployment template for a django server connected to a PostGreSQL
      database.
    tags: django
    iconClass: icon-python
objects:

  - kind: Service
    apiVersion: v1
    metadata:
      name: ${NAME}
      labels:
        name: ${NAME}
        app: ${APP_NAME}
        role: ${ROLE}
        env: ${TAG_NAME}
      annotations:
        description: Exposes and load balances the application pods
        service.alpha.openshift.io/dependencies: '[{"name": "${DATABASE_SERVICE_NAME}", "kind": "Service"}]'
    spec:
      ports:
        - name: 8080-tcp
          port: 8080
          targetPort: 8080
      selector:
        name: ${NAME}

  - kind: DeploymentConfig
    apiVersion: v1
    metadata:
      name: ${NAME}
      labels:
        name: ${NAME}
        app: ${APP_NAME}
        role: ${ROLE}
        env: ${TAG_NAME}
      annotations:
        description: Defines how to deploy the application server
    spec:
      strategy:
        type: Rolling
      triggers:
        - type: ImageChange
          imageChangeParams:
            automatic: true
            containerNames:
              - ${NAME}
            from:
              kind: ImageStreamTag
              namespace: "${IMAGE_NAMESPACE}"
              name: "${NAME}:${TAG_NAME}"
        - type: ConfigChange
      replicas: 1
      selector:
        name: ${NAME}
      template:
        metadata:
          name: ${NAME}
          labels:
            name: ${NAME}
            app: ${APP_NAME}
            role: ${ROLE}
            env: ${TAG_NAME}
        spec:
          nodeSelector:
            aporeto-enforcerd: 'true'
          containers:
            - name: ${NAME}
              image: " "
              ports:
                - containerPort: 8080
                  protocol: TCP
              readinessProbe:
                initialDelaySeconds: 3
                timeoutSeconds: 30
                httpGet:
                  path: "/health"
                  port: 8080
              livenessProbe:
                initialDelaySeconds: 120
                timeoutSeconds: 30
                httpGet:
                  path: "/health"
                  port: 8080
              env:
                - name: DATABASE_SERVICE_NAME
                  value: "${DATABASE_SERVICE_NAME}"
                - name: DATABASE_ENGINE
                  value: "${DATABASE_ENGINE}"
                - name: DATABASE_NAME
                  value: "${DATABASE_NAME}"
                - name: DATABASE_USER
                  valueFrom:
                    secretKeyRef:
                      name: "${DATABASE_DEPLOYMENT_NAME}"
                      key: database-user
                - name: DATABASE_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: "${DATABASE_DEPLOYMENT_NAME}"
                      key: database-password
                - name: APP_CONFIG
                  value: "${APP_CONFIG}"
                - name: DJANGO_SECRET_KEY
                  value: "${DJANGO_SECRET_KEY}"
                - name: DJANGO_DEBUG
                  value: "${DJANGO_DEBUG}"
                - name: PDF_SERVICE_URL
                  value: ${PDF_SERVICE_URL}
              resources:
                requests:
                  cpu: "${CPU_REQUEST}"
                  memory: "${MEMORY_REQUEST}"
                limits:
                  cpu: "${CPU_LIMIT}"
                  memory: "${MEMORY_LIMIT}"

parameters:
  - name: NAME
    displayName: Name
    description: The name assigned to all of the OpenShift resources associated to the server instance.
    required: true
    value: django

  - name: APP_NAME
    displayName: App Name
    description: App Name
    required: true
    value: fpo
  - name: ROLE
    displayName: Role
    description: Role
    required: true
    value: api

  - name: IMAGE_NAMESPACE
    displayName: Image Namespace
    required: true
    description: The namespace of the OpenShift project containing the imagestream for the application.
    value: jag-csb-jes-family-protection-order-tools
  - name: DATABASE_SERVICE_NAME
    displayName: Database Service Name
    description: The name of the database server/service.
    required: true
    value: postgresql
  - name: DATABASE_ENGINE
    displayName: Database Engine
    required: true
    description: "Database engine: postgresql, mysql, or sqlite (default)."
    value: postgresql
  - name: DATABASE_NAME
    displayName: Database Name
    required: true
    description: Name of the deployed database (see environment variables in deployed database).
    value: FPO_Database
  - name: APP_CONFIG
    displayName: Application Configuration File Path
    description: Relative path to Gunicorn configuration file (optional).
  - name: DJANGO_SECRET_KEY
    displayName: Django Secret Key
    description: Set this to a long random string.
    generate: expression
    from: "[\\w]{50}"
  - name: DJANGO_DEBUG
    displayName: Django Debug
    description: If Django is in debug mode
    required: true
    value: "False"
  - name: PDF_SERVICE_URL
    displayName: PDF Service URL
    description: Internal URL to the PDF service.
    required: true
    value: "http://weasyprint:5001"
  - name: TAG_NAME
    displayName: Environment TAG name
    description: The TAG name for this environment, e.g., dev, test, prod
    value: dev
    required: true
  - name: DATABASE_DEPLOYMENT_NAME
    displayName: Database Deployment Name
    description: The name associated to the database deployment resources.  In particular, this is used to wrie up the credentials associated to the database.
    required: true
    value: postgresql

  - name: CPU_REQUEST
    displayName: Resources CPU Request
    description: The resources CPU request (in cores) for this build.
    required: true
    value: 10m
  - name: CPU_LIMIT
    displayName: Resources CPU Limit
    description: The resources CPU limit (in cores) for this build.
    required: true
    value: 500m
  - name: MEMORY_REQUEST
    displayName: Resources Memory Request
    description: The resources Memory request (in Mi, Gi, etc) for this build.
    required: true
    value: 10Mi
  - name: MEMORY_LIMIT
    displayName: Resources Memory Limit
    description: The resources Memory limit (in Mi, Gi, etc) for this build.
    required: true
    value: 1Gi
