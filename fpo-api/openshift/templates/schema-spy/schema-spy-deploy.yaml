---
kind: Template
apiVersion: v1
metadata:
  name: "${NAME}-deployment-template"
  annotations:
    description: Deployment template for a Schema Spy instance.
    tags: schema-spy
objects:

  - kind: Service
    apiVersion: v1
    metadata:
      name: ${NAME}
      labels:
        name: ${NAME}
        app: ${APP_NAME}
        role: ${ROLE}
        env: ${TAG_NAME}
      annotations:
        description: Exposes and load balances the application pods
    spec:
      ports:
      - name: 8080-tcp
        protocol: TCP
        port: 8080
        targetPort: 8080
      selector:
        name: ${NAME}

  - kind: Route
    apiVersion: v1
    metadata:
      name: ${NAME}
      labels:
        name: ${NAME}
        app: ${APP_NAME}
        role: ${ROLE}
        env: ${TAG_NAME}
    spec:
      host: ${APPLICATION_DOMAIN}
      tls:
        insecureEdgeTerminationPolicy: Redirect
        termination: edge
      to:
        kind: Service
        name: ${NAME}

  - kind: DeploymentConfig
    apiVersion: v1
    metadata:
      name: ${NAME}
      labels:
        name: ${NAME}
        app: ${APP_NAME}
        role: ${ROLE}
        env: ${TAG_NAME}
      annotations:
        description: Defines how to deploy the container.
    spec:
      strategy:
        type: Rolling
        rollingParams:
          updatePeriodSeconds: 1
          intervalSeconds: 1
          timeoutSeconds: 600
          maxUnavailable: 25%
          maxSurge: 25%
      triggers:
      - type: ConfigChange
      - type: ImageChange
        imageChangeParams:
          automatic: true
          containerNames:
          - ${NAME}
          from:
            kind: ImageStreamTag
            namespace: "${IMAGE_NAMESPACE}"
            name: "${NAME}:${TAG_NAME}"
      replicas: 1
      selector:
        name: ${NAME}
      template:
        metadata:
          name: ${NAME}
          labels:
            name: ${NAME}
            app: ${APP_NAME}
            role: ${ROLE}
            env: ${TAG_NAME}
        spec:
          nodeSelector:
            aporeto-enforcerd: 'true'
          containers:
          - name: ${NAME}
            image: " "
            ports:
            - containerPort: 8080
              protocol: TCP
            env:
            - name: DATABASE_SERVICE_NAME
              value: "${DATABASE_SERVICE_NAME}"
            - name: POSTGRESQL_DATABASE
              value: "${DATABASE_NAME}"
            - name: POSTGRESQL_USER
              valueFrom:
                secretKeyRef:
                  name: "${DATABASE_DEPLOYMENT_NAME}"
                  key: database-user
            - name: POSTGRESQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "${DATABASE_DEPLOYMENT_NAME}"
                  key: database-password
            readinessProbe:
              initialDelaySeconds: 3
              timeoutSeconds: 30
              httpGet:
                path: "/"
                port: 8080
            livenessProbe:
              initialDelaySeconds: 300
              timeoutSeconds: 30
              httpGet:
                path: "/"
                port: 8080
            resources:
              requests:
                cpu: "${CPU_REQUEST}"
                memory: "${MEMORY_REQUEST}"
              limits:
                cpu: "${CPU_LIMIT}"
                memory: "${MEMORY_LIMIT}"

parameters:
  - name: NAME
    displayName: Schema Spy Name
    description: The name assigned to all of the schema spy objects defined in this
      template.
    required: true
    value: schema-spy

  - name: APP_NAME
    displayName: App Name
    description: App Name
    required: true
    value: fpo
  - name: ROLE
    displayName: Role
    description: Role
    required: true
    value: schema-spy

  - name: IMAGE_NAMESPACE
    displayName: Image Namespace
    required: true
    description: The namespace of the OpenShift project containing the imagestream for
      the application.
    value: jag-csb-jes-family-protection-order-tools
  - name: MEMORY_LIMIT
    displayName: Memory Limit
    required: true
    description: Maximum amount of memory the Django container can use.
    value: 512Mi
  - name: APPLICATION_DOMAIN
    displayName: Application Hostname
    description: The exposed hostname that will route to the Django service, if left
      blank a value will be defaulted.
    value: 'protection-order-schema-dev.apps.silver.devops.gov.bc.ca'
  - name: DATABASE_SERVICE_NAME
    displayName: Database Service Name
    required: true
    value: postgresql
  - name: DATABASE_NAME
    displayName: Database Name
    required: true
    description: Name of the deployed database (see environment variables in deployed
      database).
    value: FPO_Database
  - name: TAG_NAME
    displayName: Environment TAG name
    description: The TAG name for this environment, e.g., dev, test, prod
    value: dev
    required: true
  - name: DATABASE_DEPLOYMENT_NAME
    displayName: Database Deployment Name
    description: The name associated to the database deployment resources.  In particular,
      this is used to wrie up the credentials associated to the database.
    required: true
    value: postgresql
  - name: CPU_REQUEST
    displayName: Resources CPU Request
    description: The resources CPU request (in cores) for this build.
    required: true
    value: '0'
  - name: CPU_LIMIT
    displayName: Resources CPU Limit
    description: The resources CPU limit (in cores) for this build.
    required: true
    value: '0'
  - name: MEMORY_REQUEST
    displayName: Resources Memory Request
    description: The resources Memory request (in Mi, Gi, etc) for this build.
    required: true
    value: '0'
  - name: MEMORY_LIMIT
    displayName: Resources Memory Limit
    description: The resources Memory limit (in Mi, Gi, etc) for this build.
    required: true
    value: '0'